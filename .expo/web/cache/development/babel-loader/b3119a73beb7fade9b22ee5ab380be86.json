{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JOEY\\\\Desktop\\\\sinovalo\\\\screens\\\\page.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Card from \"./Card\";\nimport Form from \"./Form\";\nimport base64 from 'react-native-base64';\nimport BackHeader from \"./backDrawerHeader\";\nexport default function ImagePickerExample(_ref) {\n  var state = _ref.state,\n      setState = _ref.setState;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image64 = _useState4[0],\n      setImage64 = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.base64);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  try {} catch (error) {}\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(BackHeader, {\n    state: state,\n    setState: setState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      textAlign: \"center\",\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"What would you like to sell today?\"), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.infobuy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"Add Photos\"))))), state.formdata > 0 ? React.createElement(Image, {\n    source: {\n      uri: state.formdata[0][\"image\"]\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }) : image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }\n  }), React.createElement(Form, {\n    image: image,\n    state: state,\n    setState: setState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  button: {\n    borderRadius: 8,\n    paddingVertical: 14,\n    paddingHorizontal: 10,\n    backgroundColor: \"#f01d71\"\n  },\n  ButText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    fontSize: 16,\n    textAlign: \"center\"\n  },\n  infobuy: {\n    alignItems: 'center',\n    marginHorizontal: 10,\n    marginVertical: 30,\n    padding: 20,\n    backgroundColor: '#3dc2c4',\n    borderWidth: 1,\n    borderColor: '#DDD',\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/JOEY/Desktop/sinovalo/screens/page.js"],"names":["React","useState","useEffect","ImagePicker","Card","Form","base64","BackHeader","ImagePickerExample","state","setState","image","setImage","image64","setImage64","Platform","OS","requestCameraRollPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","error","fontSize","textAlign","padding","flex","alignItems","justifyContent","styles","infobuy","formdata","uri","width","height","StyleSheet","create","button","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","ButText","color","fontWeight","textTransform","marginHorizontal","marginVertical","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, Platform, TouchableOpacity, StyleSheet, Text, ScrollView } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Card from './Card';\r\nimport Form from './Form';\r\nimport base64 from 'react-native-base64';\r\nimport BackHeader from './backDrawerHeader';\r\n\r\n\r\nexport default function ImagePickerExample({state,setState}) {\r\n    const [image, setImage] = useState(null);\r\n    const [image64, setImage64] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (Platform.OS !== 'web') {\r\n                const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\r\n                if (status !== 'granted') {\r\n                    alert('Sorry, we need camera roll permissions to make this work!');\r\n                }\r\n            }\r\n        })();\r\n    }, []);\r\n \r\n    const pickImage = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n            // allowsMultipleSelection: true,\r\n        });\r\n\r\n        console.log(result);\r\n\r\n        if (!result.cancelled) {\r\n            setImage(result.base64);\r\n            //setImage64(result.base64)\r\n        }\r\n    };\r\n\r\n    try {\r\n      \r\n    } catch (error) {\r\n        \r\n    }\r\n    return (\r\n        <ScrollView>\r\n        <BackHeader state={state} setState={setState}/>\r\n        <Text style={\r\n            {\r\n                fontSize: 30,\r\n                textAlign: \"center\",\r\n                padding: 10\r\n            }\r\n        }>\r\n            What would you like to sell today?\r\n        </Text>\r\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: 'center' }}>\r\n            <Card>\r\n                <View>\r\n                    <TouchableOpacity onPress={pickImage}>\r\n                        <View>\r\n                            <Text style={styles.infobuy}>Add Photos</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Card>\r\n            {state.formdata>0?\r\n                <Image source={{ uri:state.formdata[0][\"image\"]}} style={{ width: 200, height: 200 }} />:\r\n                image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n            }\r\n            <Form image={image}  state={state}  setState={setState}/>\r\n        </View>\r\n        </ScrollView>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        borderRadius: 8,\r\n        paddingVertical: 14,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: \"#f01d71\"\r\n    },\r\n    ButText: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: 16,\r\n        textAlign: \"center\"\r\n    },\r\n    infobuy: {\r\n        alignItems: 'center',\r\n        marginHorizontal: 10,\r\n        marginVertical: 30,\r\n        padding: 20,\r\n        backgroundColor: '#3dc2c4',\r\n        borderWidth: 1,\r\n        borderColor: '#DDD',\r\n        borderRadius: 10\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}