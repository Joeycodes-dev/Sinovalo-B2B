{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JOEY\\\\Desktop\\\\sinovalo\\\\routes\\\\navigator.js\";\nimport React, { useState } from 'react';\nimport Login from \"../screens/login\";\nimport Content2 from \"../screens/content2\";\nimport Marketplace from \"../screens/marketplace\";\nimport Marketplace_item_Owner from \"../screens/marketplace_item_Owner\";\nimport AppDrawer from \"../screens/appDrawer\";\nimport Page from \"../screens/page\";\nimport SignUp from \"../screens/signup\";\nimport Account from \"../screens/account\";\nimport { NetInfo } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar screens = function screens() {\n  var _useState = useState({\n    err: \"\",\n    page: 0,\n    formdata: [],\n    currentItem: \"\",\n    category: [],\n    current_user: \"\",\n    itemOwner: \"\",\n    currentCategory: \"\",\n    currentDescription: \"\",\n    currentPrice: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function online() {\n    switch (state.page) {\n      case 0:\n        return React.createElement(Login, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }\n        });\n\n      case 1:\n        return React.createElement(SignUp, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 20\n          }\n        });\n\n      case 2:\n        return React.createElement(Content2, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 20\n          }\n        });\n\n      case 3:\n        return React.createElement(Marketplace, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }\n        });\n\n      case 4:\n        return React.createElement(AppDrawer, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }\n        });\n\n      case 5:\n        return React.createElement(Account, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }\n        });\n\n      case 6:\n        return React.createElement(Marketplace_item_Owner, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }\n        });\n\n      case 7:\n        return React.createElement(Page, {\n          state: state,\n          setState: setState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 20\n          }\n        });\n\n      case 8:\n    }\n  }\n\n  if (Platform.OS === \"android\") {\n    NetInfo.isConnected.fetch().then(function (isConnected) {\n      if (isConnected) {\n        return online();\n      } else {\n        alert(\"You are offline!\");\n        return \"h1\";\n      }\n    });\n  }\n\n  ;\n};\n\nexport default screens;","map":{"version":3,"sources":["C:/Users/JOEY/Desktop/sinovalo/routes/navigator.js"],"names":["React","useState","Login","Content2","Marketplace","Marketplace_item_Owner","AppDrawer","Page","SignUp","Account","NetInfo","screens","err","page","formdata","currentItem","category","current_user","itemOwner","currentCategory","currentDescription","currentPrice","state","setState","online","Platform","OS","isConnected","fetch","then","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,SAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;SACSC,O;;;AAET,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBAEQV,QAAQ,CAAC;AAC/BW,IAAAA,GAAG,EAAE,EAD0B;AAE/BC,IAAAA,IAAI,EAAE,CAFyB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,WAAW,EAAE,EAJkB;AAK/BC,IAAAA,QAAQ,EAAE,EALqB;AAM/BC,IAAAA,YAAY,EAAE,EANiB;AAO/BC,IAAAA,SAAS,EAAE,EAPoB;AAQ/BC,IAAAA,eAAe,EAAE,EARc;AAS/BC,IAAAA,kBAAkB,EAAE,EATW;AAU/BC,IAAAA,YAAY,EAAE;AAViB,GAAD,CAFhB;AAAA;AAAA,MAEXC,KAFW;AAAA,MAEJC,QAFI;;AAclB,WAASC,MAAT,GAAiB;AACjB,YAAQF,KAAK,CAACT,IAAd;AACI,WAAK,CAAL;AACI,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAES,KAAd;AACH,UAAA,QAAQ,EAAEC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AACI,eAAO,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAED,KAAf;AACH,UAAA,QAAQ,EAAEC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AACI,eAAO,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAED,KAAjB;AACH,UAAA,QAAQ,EAAEC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AACI,eAAO,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAED,KAApB;AACH,UAAA,QAAQ,EAAEC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AACI,eAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAED,KAAlB;AACP,UAAA,QAAQ,EAAEC,QADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AACI,eAAO,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAED,KAAhB;AACH,UAAA,QAAQ,EAAEC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AACI,eAAO,oBAAC,sBAAD;AAAwB,UAAA,KAAK,EAAED,KAA/B;AACH,UAAA,QAAQ,EAAEC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AACI,eAAO,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,KAAb;AACH,UAAA,QAAQ,EAAEC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEJ,WAAK,CAAL;AAzBJ;AA4BE;;AAAA,MAAIE,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BhB,IAAAA,OAAO,CAACiB,WAAR,CAAoBC,KAApB,GAA4BC,IAA5B,CAAiC,UAAAF,WAAW,EAAI;AAC9C,UAAIA,WAAJ,EAAiB;AACf,eAAOH,MAAM,EAAb;AACD,OAFD,MAEO;AACLM,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACA,eAAO,IAAP;AACD;AACN,KAPG;AAOD;;AAAA;AACN,CApDD;;AAuDA,eAAenB,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Login from '../screens/login';\r\nimport Content2 from '../screens/content2';\r\nimport Marketplace from '../screens/marketplace';\r\nimport Marketplace_item_Owner from \"../screens/marketplace_item_Owner\"\r\nimport AppDrawer from '../screens/appDrawer';\r\nimport Page from '../screens/page';\r\nimport SignUp from '../screens/signup';\r\nimport Account from '../screens/account';\r\nimport { NetInfo, Platform } from \"react-native\";\r\n\r\nconst screens = () => {\r\n\r\n    const [state, setState] = useState({\r\n        err: \"\",\r\n        page: 0,\r\n        formdata: [],\r\n        currentItem: \"\",\r\n        category: [],\r\n        current_user: \"\",\r\n        itemOwner: \"\", // email of item owner\r\n        currentCategory: \"\",\r\n        currentDescription: \"\",\r\n        currentPrice: \"\"\r\n    })\r\n    function online(){\r\n    switch (state.page) {\r\n        case 0:\r\n            return <Login state={state}\r\n                setState={setState}/>\r\n        case 1:\r\n            return <SignUp state={state}\r\n                setState={setState}/>\r\n        case 2:\r\n            return <Content2 state={state}\r\n                setState={setState}/>\r\n        case 3:\r\n            return <Marketplace state={state}\r\n                setState={setState}/>\r\n        case 4: \r\n            return <AppDrawer state={state}\r\n            setState={setState}/>\r\n        case 5:\r\n            return <Account state={state}\r\n                setState={setState}/>\r\n        case 6:\r\n            return <Marketplace_item_Owner state={state}\r\n                setState={setState}/>\r\n        case 7:\r\n            return <Page state={state}\r\n                setState={setState}/>\r\n        case 8:\r\n            \r\n\r\n    }}if (Platform.OS === \"android\") {\r\n        NetInfo.isConnected.fetch().then(isConnected => {\r\n          if (isConnected) {\r\n            return online();\r\n          } else {\r\n            alert(\"You are offline!\");\r\n            return \"h1\"\r\n          }\r\n    })};\r\n};\r\n\r\n\r\nexport default screens;\r\n"]},"metadata":{},"sourceType":"module"}