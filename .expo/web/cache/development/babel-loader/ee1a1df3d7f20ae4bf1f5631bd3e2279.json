{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JOEY\\\\Desktop\\\\sinovalo\\\\screens\\\\Form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport db from \"../firebase\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input } from 'react-native-elements';\nexport default function Form(_ref) {\n  var _this = this;\n\n  var state = _ref.state,\n      setState = _ref.setState,\n      image = _ref.image;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      formdata = _useState2[0],\n      getFormData = _useState2[1];\n\n  var current = \"thab@gmail\";\n\n  function pushToDB() {\n    Form[\"email\"] = current;\n    Form[\"image\"] = image == undefined ? \"\" : image;\n    db.collection(\"stock\").add(Form);\n    return false;\n  }\n\n  useEffect(function () {\n    var close = db.collection(\"stock\").where(\"email\", \"==\", current).onSnapshot(function (data) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        formdata: data.docs.map(function (userData) {\n          return userData.data();\n        })\n      }));\n      console.log(Form.category);\n    });\n    return function () {\n      return close();\n    };\n  }, []);\n\n  var pressME = function pressME() {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      page: 3\n    }));\n  };\n\n  var _useState3 = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    price: \"\",\n    condition: \"\",\n    quantity: \"\",\n    image: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Form = _useState4[0],\n      updateForm = _useState4[1];\n\n  function getText(key, value) {\n    updateForm(_objectSpread(_objectSpread({}, Form), {}, _defineProperty({}, key, value)));\n  }\n\n  function addItem() {\n    if (Form.title.trim() == \"\") {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        err: \"FIELD REQUIRED\"\n      }));\n      return;\n    } else if (Form.description.trim() == \"\") {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        err: \"FIELD REQUIRED\"\n      }));\n      return;\n    } else if (Form.category.trim() == \"\") {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        err: \"FIELD REQUIRED\"\n      }));\n      return;\n    } else if (Form.price.trim() == \"\") {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        err: \"FIELD REQUIRED\"\n      }));\n      return;\n    } else if (Form.condition.trim() == \"\") {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        err: \"FIELD REQUIRED\"\n      }));\n      return;\n    } else if (Form.quantity.trim() == \"\") {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        err: \"FIELD REQUIRED\"\n      }));\n      return;\n    } else if (Form.image.trim() == \"\") {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        err: \"FIELD REQUIRED\"\n      }));\n      return;\n    } else {\n      pushToDB();\n    }\n  }\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      textAlign: \"center\",\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, \"Give us more info about your product\"), React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, React.createElement(Input, {\n    placeholder: \"title\",\n    errorStyle: {\n      color: 'red'\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"bookmark\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }),\n    onChangeText: function onChangeText(e) {\n      return getText(\"title\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, React.createElement(Input, {\n    placeholder: \"description\",\n    errorStyle: {\n      color: 'red'\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"comment\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }),\n    onChangeText: function onChangeText(e) {\n      return getText(\"description\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.numbers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, React.createElement(Input, {\n    placeholder: \"price\",\n    errorStyle: {\n      color: 'red'\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"tags\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }),\n    onChangeText: function onChangeText(e) {\n      return getText(\"price\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }), React.createElement(Input, {\n    placeholder: \"quantity\",\n    errorStyle: {\n      color: 'red'\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"line-chart\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }),\n    onChangeText: function onChangeText(e) {\n      return getText(\"quantity\", e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, React.createElement(DropDownPicker, {\n    items: [{\n      label: 'New',\n      value: 'New',\n      icon: function icon() {\n        return React.createElement(Icon, {\n          name: \"star\",\n          size: 18,\n          color: \"#900\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 53\n          }\n        });\n      },\n      hidden: true\n    }, {\n      label: 'Used-New',\n      value: 'Used-New',\n      icon: function icon() {\n        return React.createElement(Icon, {\n          name: \"star-half-o\",\n          size: 18,\n          color: \"#900\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 53\n          }\n        });\n      }\n    }, {\n      label: 'Used-Fair',\n      value: 'Used-Fair',\n      icon: function icon() {\n        return React.createElement(Icon, {\n          name: \"recycle\",\n          size: 18,\n          color: \"#900\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 53\n          }\n        });\n      }\n    }],\n    defaultValue: Form.condition,\n    placeholder: \"Condition\",\n    containerStyle: {\n      height: 40\n    },\n    style: {\n      backgroundColor: '#fafafa'\n    },\n    itemStyle: {\n      justifyContent: 'flex-start'\n    },\n    dropDownStyle: {\n      backgroundColor: '#fafafa'\n    },\n    onChangeItem: function onChangeItem(e) {\n      return getText(\"condition\", e.value);\n    },\n    onPress: function onPress(e) {\n      return Alert(\"condition\", e.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.moveMe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, React.createElement(DropDownPicker, {\n    items: [{\n      label: 'New',\n      value: 'New',\n      icon: function icon() {\n        return React.createElement(Icon, {\n          name: \"star\",\n          size: 18,\n          color: \"#900\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 53\n          }\n        });\n      },\n      hidden: true\n    }, {\n      label: 'Used-New',\n      value: 'Used-New',\n      icon: function icon() {\n        return React.createElement(Icon, {\n          name: \"star-half-o\",\n          size: 18,\n          color: \"#900\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 53\n          }\n        });\n      }\n    }, {\n      label: 'Used-Fair',\n      value: 'Used-Fair',\n      icon: function icon() {\n        return React.createElement(Icon, {\n          name: \"recycle\",\n          size: 18,\n          color: \"#900\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 53\n          }\n        });\n      }\n    }],\n    defaultValue: Form.category,\n    placeholder: \"Category\",\n    containerStyle: {\n      height: 40\n    },\n    style: {\n      backgroundColor: '#fafafa'\n    },\n    itemStyle: {\n      justifyContent: 'flex-start'\n    },\n    dropDownStyle: {\n      backgroundColor: '#fafafa'\n    },\n    onChangeItem: function onChangeItem(e) {\n      return getText(\"category\", e.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 29\n    }\n  })))), React.createElement(View, {\n    style: styles.takemedown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: (pushToDB, setState(_objectSpread(_objectSpread({}, state), {}, {\n      page: 4\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.infosell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 25\n    }\n  }, \"Create New Post\")))));\n}\nvar styles = StyleSheet.create({\n  takemedown: {\n    marginTop: 115\n  },\n  infosell: {\n    color: 'white',\n    alignItems: 'center',\n    marginHorizontal: 10,\n    marginVertical: 10,\n    padding: 50,\n    backgroundColor: '#116263',\n    borderWidth: 1,\n    borderColor: '#DDD',\n    borderRadius: 10\n  },\n  moveMe: {\n    marginTop: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/JOEY/Desktop/sinovalo/screens/Form.js"],"names":["React","useEffect","useState","db","DropDownPicker","Icon","Input","Form","state","setState","image","formdata","getFormData","current","pushToDB","undefined","collection","add","close","where","onSnapshot","data","docs","map","userData","console","log","category","pressME","page","title","description","price","condition","quantity","updateForm","getText","key","value","addItem","trim","err","fontSize","textAlign","padding","styles","screen","color","e","numbers","label","icon","hidden","height","backgroundColor","justifyContent","Alert","moveMe","takemedown","infosell","StyleSheet","create","marginTop","alignItems","marginHorizontal","marginVertical","borderWidth","borderColor","borderRadius"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;AAYA,OAAOC,EAAP;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP;AACA,SAAQC,KAAR,QAAoB,uBAApB;AAGA,eAAe,SAASC,IAAT,OAAwC;AAAA;;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,QAAkB,QAAlBA,QAAkB;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAAA,kBACrBR,QAAQ,CAAC,EAAD,CADa;AAAA;AAAA,MAC9CS,QAD8C;AAAA,MACpCC,WADoC;;AAMnD,MAAIC,OAAO,GAAG,YAAd;;AACA,WAASC,QAAT,GAAoB;AAEhBP,IAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBM,OAAhB;AACAN,IAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBG,KAAK,IAAIK,SAAT,GAAqB,EAArB,GAA0BL,KAA1C;AACAP,IAAAA,EAAE,CAACa,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BV,IAA3B;AACA,WAAO,KAAP;AAEH;;AAGDN,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAIiB,KAAK,GAAGf,EAAE,CAACa,UAAH,CAAc,OAAd,EAAuBG,KAAvB,CAA6B,OAA7B,EAAsC,IAAtC,EAA4CN,OAA5C,EAAqDO,UAArD,CAAgE,UAAAC,IAAI,EAAG;AAAEZ,MAAAA,QAAQ,iCACtFD,KADsF;AAEzFG,QAAAA,QAAQ,EAAEU,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAc,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACH,IAAT,EAAJ;AAAA,SAAtB;AAF+E,SAAR;AAMnFI,MAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACoB,QAAjB;AAA4B,KANlB,CAAZ;AASA,WAAM;AAAA,aAAMT,KAAK,EAAX;AAAA,KAAN;AAEH,GAbQ,EAaN,EAbM,CAAT;;AAsCA,MAAMU,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMnB,QAAQ,iCACvBD,KADuB;AAE1BqB,MAAAA,IAAI,EAAE;AAFoB,OAAd;AAAA,GAAhB;;AAvDmD,mBA6D1B3B,QAAQ,CAAC;AAC9B4B,IAAAA,KAAK,EAAE,EADuB;AAE9BC,IAAAA,WAAW,EAAE,EAFiB;AAG9BJ,IAAAA,QAAQ,EAAE,EAHoB;AAI9BK,IAAAA,KAAK,EAAE,EAJuB;AAK9BC,IAAAA,SAAS,EAAE,EALmB;AAM9BC,IAAAA,QAAQ,EAAE,EANoB;AAO9BxB,IAAAA,KAAK,EAAE;AAPuB,GAAD,CA7DkB;AAAA;AAAA,MA6D9CH,IA7D8C;AAAA,MA6DxC4B,UA7DwC;;AAwEnD,WAASC,OAAT,CAAiBC,GAAjB,EAAsBC,KAAtB,EAA6B;AACzBH,IAAAA,UAAU,iCACF5B,IADE,2BAEL8B,GAFK,EAECC,KAFD,GAAV;AAKH;;AACD,WAASC,OAAT,GAAmB;AACf,QAAIhC,IAAI,CAACuB,KAAL,CAAWU,IAAX,MAAqB,EAAzB,EAA6B;AAEzB/B,MAAAA,QAAQ,iCACDD,KADC;AAEJiC,QAAAA,GAAG,EAAE;AAFD,SAAR;AAIA;AAEH,KARD,MAQO,IAAIlC,IAAI,CAACwB,WAAL,CAAiBS,IAAjB,MAA2B,EAA/B,EAAmC;AAEtC/B,MAAAA,QAAQ,iCACDD,KADC;AAEJiC,QAAAA,GAAG,EAAE;AAFD,SAAR;AAIA;AAEH,KARM,MAQA,IAAIlC,IAAI,CAACoB,QAAL,CAAca,IAAd,MAAwB,EAA5B,EAAgC;AAEnC/B,MAAAA,QAAQ,iCACDD,KADC;AAEJiC,QAAAA,GAAG,EAAE;AAFD,SAAR;AAIA;AAEH,KARM,MAQA,IAAIlC,IAAI,CAACyB,KAAL,CAAWQ,IAAX,MAAqB,EAAzB,EAA6B;AAEhC/B,MAAAA,QAAQ,iCACDD,KADC;AAEJiC,QAAAA,GAAG,EAAE;AAFD,SAAR;AAIA;AAEH,KARM,MAQA,IAAIlC,IAAI,CAAC0B,SAAL,CAAeO,IAAf,MAAyB,EAA7B,EAAiC;AAEpC/B,MAAAA,QAAQ,iCACDD,KADC;AAEJiC,QAAAA,GAAG,EAAE;AAFD,SAAR;AAIA;AACH,KAPM,MAOA,IAAIlC,IAAI,CAAC2B,QAAL,CAAcM,IAAd,MAAwB,EAA5B,EAAgC;AAEnC/B,MAAAA,QAAQ,iCACDD,KADC;AAEJiC,QAAAA,GAAG,EAAE;AAFD,SAAR;AAIA;AACH,KAPM,MAOA,IAAIlC,IAAI,CAACG,KAAL,CAAW8B,IAAX,MAAqB,EAAzB,EAA6B;AAEhC/B,MAAAA,QAAQ,iCACDD,KADC;AAEJiC,QAAAA,GAAG,EAAE;AAFD,SAAR;AAIA;AACH,KAPM,MAOA;AACH3B,MAAAA,QAAQ;AAGX;AACJ;;AAED,SAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EACP;AACI4B,MAAAA,QAAQ,EAAE,EADd;AAEIC,MAAAA,SAAS,EAAE,QAFf;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EACPC,MAAM,CAACC,MADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,OAAnB;AACI,IAAA,UAAU,EACN;AAACC,MAAAA,KAAK,EAAE;AAAR,KAFR;AAKI,IAAA,QAAQ,EACJ,oBAAC,IAAD;AACJ,MAAA,IAAI,EAAC,UADD;AACW,MAAA,IAAI,EAAE,EADjB;AAEJ,MAAA,KAAK,EAAC,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAUI,IAAA,YAAY,EACR,sBAAAC,CAAC;AAAA,aAAIZ,OAAO,CAAC,OAAD,EAAUY,CAAV,CAAX;AAAA,KAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,EAkBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,aAAnB;AACI,IAAA,UAAU,EACN;AAACD,MAAAA,KAAK,EAAE;AAAR,KAFR;AAKI,IAAA,QAAQ,EACJ,oBAAC,IAAD;AACJ,MAAA,IAAI,EAAC,SADD;AACU,MAAA,IAAI,EAAE,EADhB;AAEJ,MAAA,KAAK,EAAC,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAUI,IAAA,YAAY,EACR,sBAAAC,CAAC;AAAA,aAAIZ,OAAO,CAAC,aAAD,EAAgBY,CAAhB,CAAX;AAAA,KAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlBJ,EAiCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EACPH,MAAM,CAACI,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,OAAnB;AACI,IAAA,UAAU,EACN;AAACF,MAAAA,KAAK,EAAE;AAAR,KAFR;AAKI,IAAA,QAAQ,EACJ,oBAAC,IAAD;AACJ,MAAA,IAAI,EAAC,MADD;AACO,MAAA,IAAI,EAAE,EADb;AAEJ,MAAA,KAAK,EAAC,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAUI,IAAA,YAAY,EACR,sBAAAC,CAAC;AAAA,aAAIZ,OAAO,CAAC,OAAD,EAAUY,CAAV,CAAX;AAAA,KAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAkBQ,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,UAAnB;AACA,IAAA,UAAU,EACN;AAACD,MAAAA,KAAK,EAAE;AAAR,KAFJ;AAKA,IAAA,QAAQ,EACJ,oBAAC,IAAD;AACJ,MAAA,IAAI,EAAC,YADD;AACa,MAAA,IAAI,EAAE,EADnB;AAEJ,MAAA,KAAK,EAAC,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAUA,IAAA,YAAY,EACR,sBAAAC,CAAC;AAAA,aAAIZ,OAAO,CAAC,UAAD,EAAaY,CAAb,CAAX;AAAA,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBR,CAjCJ,EAkEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EACb,CACI;AACIE,MAAAA,KAAK,EAAE,KADX;AAEIZ,MAAAA,KAAK,EAAE,KAFX;AAGIa,MAAAA,IAAI,EAAE;AAAA,eAAM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AACR,UAAA,IAAI,EAAE,EADE;AAER,UAAA,KAAK,EAAC,MAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA,OAHV;AAMIC,MAAAA,MAAM,EAAE;AANZ,KADJ,EAQO;AACCF,MAAAA,KAAK,EAAE,UADR;AAECZ,MAAAA,KAAK,EAAE,UAFR;AAGCa,MAAAA,IAAI,EAAE;AAAA,eAAM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AACR,UAAA,IAAI,EAAE,EADE;AAER,UAAA,KAAK,EAAC,MAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AAHP,KARP,EAcO;AACCD,MAAAA,KAAK,EAAE,WADR;AAECZ,MAAAA,KAAK,EAAE,WAFR;AAGCa,MAAAA,IAAI,EAAE;AAAA,eAAM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AACR,UAAA,IAAI,EAAE,EADE;AAER,UAAA,KAAK,EAAC,MAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AAHP,KAdP,CADR;AAwBI,IAAA,YAAY,EACR5C,IAAI,CAAC0B,SAzBb;AA2BI,IAAA,WAAW,EAAC,WA3BhB;AA4BI,IAAA,cAAc,EACV;AAACoB,MAAAA,MAAM,EAAE;AAAT,KA7BR;AA+BI,IAAA,KAAK,EACD;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAhCR;AAkCI,IAAA,SAAS,EACL;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAnCR;AAqCI,IAAA,aAAa,EACT;AAACD,MAAAA,eAAe,EAAE;AAAlB,KAtCR;AAwCI,IAAA,YAAY,EACR,sBAAAN,CAAC;AAAA,aAAIZ,OAAO,CAAC,WAAD,EAAcY,CAAC,CAACV,KAAhB,CAAX;AAAA,KAzCT;AA2CI,IAAA,OAAO,EACH,iBAAAU,CAAC;AAAA,aAAIQ,KAAK,CAAC,WAAD,EAAcR,CAAC,CAACV,KAAhB,CAAT;AAAA,KA5CT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlEJ,EAkHI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,cAAD;AAAgB,IAAA,KAAK,EACjB,CACI;AACIP,MAAAA,KAAK,EAAE,KADX;AAEIZ,MAAAA,KAAK,EAAE,KAFX;AAGIa,MAAAA,IAAI,EAAE;AAAA,eAAM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AACR,UAAA,IAAI,EAAE,EADE;AAER,UAAA,KAAK,EAAC,MAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA,OAHV;AAMIC,MAAAA,MAAM,EAAE;AANZ,KADJ,EAQO;AACCF,MAAAA,KAAK,EAAE,UADR;AAECZ,MAAAA,KAAK,EAAE,UAFR;AAGCa,MAAAA,IAAI,EAAE;AAAA,eAAM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AACR,UAAA,IAAI,EAAE,EADE;AAER,UAAA,KAAK,EAAC,MAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AAHP,KARP,EAcO;AACCD,MAAAA,KAAK,EAAE,WADR;AAECZ,MAAAA,KAAK,EAAE,WAFR;AAGCa,MAAAA,IAAI,EAAE;AAAA,eAAM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AACR,UAAA,IAAI,EAAE,EADE;AAER,UAAA,KAAK,EAAC,MAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AAHP,KAdP,CADJ;AAwBA,IAAA,YAAY,EACR5C,IAAI,CAACoB,QAzBT;AA2BA,IAAA,WAAW,EAAC,UA3BZ;AA4BA,IAAA,cAAc,EACV;AAAC0B,MAAAA,MAAM,EAAE;AAAT,KA7BJ;AA+BA,IAAA,KAAK,EACD;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAhCJ;AAkCA,IAAA,SAAS,EACL;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAnCJ;AAqCA,IAAA,aAAa,EACT;AAACD,MAAAA,eAAe,EAAE;AAAlB,KAtCJ;AAwCA,IAAA,YAAY,EACR,sBAAAN,CAAC;AAAA,aAAIZ,OAAO,CAAC,UAAD,EAAaY,CAAC,CAACV,KAAf,CAAX;AAAA,KAzCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADA,CAlHJ,CAXJ,EA6KI,oBAAC,IAAD;AAAM,IAAA,KAAK,EACPO,MAAM,CAACa,UADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,GAKrB5C,QAAQ,EACRL,QAAQ,iCAAKD,KAAL;AAAWqB,MAAAA,IAAI,EAAC;AAAhB,OANa,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EACPgB,MAAM,CAACc,QADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ,CAHJ,CA7KJ,CADJ,CAFJ;AAoMH;AAED,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,UAAU,EAAE;AACRI,IAAAA,SAAS,EAAE;AADH,GADiB;AAI7BH,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,KAAK,EAAE,OADD;AAENgB,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,gBAAgB,EAAE,EAHZ;AAINC,IAAAA,cAAc,EAAE,EAJV;AAKNrB,IAAAA,OAAO,EAAE,EALH;AAMNU,IAAAA,eAAe,EAAE,SANX;AAONY,IAAAA,WAAW,EAAE,CAPP;AAQNC,IAAAA,WAAW,EAAE,MARP;AASNC,IAAAA,YAAY,EAAE;AATR,GAJmB;AAe7BX,EAAAA,MAAM,EAAC;AACHK,IAAAA,SAAS,EAAC;AADP;AAfsB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    FlatList,\r\n    Button,\r\n    Alert\r\n} from 'react-native';\r\n\r\nimport db from '../firebase';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {Input} from 'react-native-elements';\r\n\r\n\r\nexport default function Form({state, setState, image}) {\r\n    var [formdata, getFormData] = useState([])\r\n    // const [select,setSelect] = useState({\r\n    //     item1: \"\",\r\n    //     item2: \"\"\r\n    // })\r\n    var current = \"thab@gmail\"\r\n    function pushToDB() {\r\n\r\n        Form[\"email\"] = current\r\n        Form[\"image\"] = image == undefined ? \"\" : image\r\n        db.collection(\"stock\").add(Form)\r\n        return false\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        var close = db.collection(\"stock\").where(\"email\", \"==\", current).onSnapshot(data =>{ setState({\r\n            ...state,\r\n            formdata: data.docs.map(userData => userData.data())\r\n            \r\n        }\r\n\r\n        );console.log(Form.category);}\r\n        )\r\n\r\n        return() => close()\r\n\r\n    }, [])\r\n\r\n    //     useEffect(()=>{\r\n\r\n    //         db.collection(\"stock\")\r\n    //         .where(\"itemName\",\"==\",\"car\")\r\n    //         .onSnapshot(e=>{\r\n    //             console.log( e.docs.map(e=>e.data()))\r\n    //         })\r\n    //     },[])\r\n\r\n    // const dummy =()=>{\r\n    //         db.collection(\"stock\")\r\n    //         .add({\r\n    //             condition:\"th@gmail.co\",\r\n    //             imageUrl:\"\",\r\n    //             itemName:\"bus\",\r\n    //             quntity:\"20\",\r\n    //             price:\"9000\",\r\n    //             createDate: Date(Date.now())\r\n    //         }\r\n    //         )\r\n    //     }\r\n\r\n    // dummy()\r\n    const pressME = () => setState({\r\n        ...state,\r\n        page: 3\r\n    });\r\n\r\n\r\n    var [Form, updateForm] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        price: \"\",\r\n        condition: \"\",\r\n        quantity: \"\",\r\n        image: \"\"\r\n    })\r\n\r\n\r\n    function getText(key, value) {\r\n        updateForm({\r\n            ... Form,\r\n            [key]: value\r\n        })\r\n\r\n    }\r\n    function addItem() {\r\n        if (Form.title.trim() == \"\") {\r\n\r\n            setState({\r\n                ...state,\r\n                err: \"FIELD REQUIRED\"\r\n            });\r\n            return\r\n\r\n        } else if (Form.description.trim() == \"\") {\r\n\r\n            setState({\r\n                ...state,\r\n                err: \"FIELD REQUIRED\"\r\n            });\r\n            return\r\n\r\n        } else if (Form.category.trim() == \"\") {\r\n\r\n            setState({\r\n                ...state,\r\n                err: \"FIELD REQUIRED\"\r\n            });\r\n            return\r\n\r\n        } else if (Form.price.trim() == \"\") {\r\n\r\n            setState({\r\n                ...state,\r\n                err: \"FIELD REQUIRED\"\r\n            });\r\n            return\r\n\r\n        } else if (Form.condition.trim() == \"\") {\r\n\r\n            setState({\r\n                ...state,\r\n                err: \"FIELD REQUIRED\"\r\n            });\r\n            return\r\n        } else if (Form.quantity.trim() == \"\") {\r\n\r\n            setState({\r\n                ...state,\r\n                err: \"FIELD REQUIRED\"\r\n            });\r\n            return\r\n        } else if (Form.image.trim() == \"\") {\r\n\r\n            setState({\r\n                ...state,\r\n                err: \"FIELD REQUIRED\"\r\n            });\r\n            return\r\n        } else {\r\n            pushToDB()\r\n            // setState({ ...state, title: [...state.title, Form], page:0 });\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <ScrollView>\r\n            <View>\r\n                <Text style={\r\n                    {\r\n                        fontSize: 20,\r\n                        textAlign: \"center\",\r\n                        padding: 10\r\n                    }\r\n                }>\r\n                    Give us more info about your product\r\n                </Text>\r\n\r\n                <View style={\r\n                    styles.screen\r\n                }>\r\n                    <View>\r\n                        <Input placeholder='title'\r\n                            errorStyle={\r\n                                {color: 'red'}\r\n                            }\r\n                            //errorMessage={state.err}\r\n                            leftIcon={\r\n                                <Icon\r\n                            name='bookmark'size={24}\r\n                            color='black'/>\r\n                            }\r\n                            onChangeText={\r\n                                e => getText(\"title\", e)\r\n                            }/>\r\n                    </View>\r\n                    <View>\r\n                        <Input placeholder=\"description\"\r\n                            errorStyle={\r\n                                {color: 'red'}\r\n                            }\r\n                            //errorMessage={state.err}\r\n                            leftIcon={\r\n                                <Icon\r\n                            name='comment'size={24}\r\n                            color='black'/>\r\n                            }\r\n                            onChangeText={\r\n                                e => getText(\"description\", e)\r\n                            }/>\r\n                    </View>\r\n                    <View style={\r\n                        styles.numbers\r\n                    }>\r\n                        \r\n\r\n                        <Input placeholder=\"price\"\r\n                            errorStyle={\r\n                                {color: 'red'}\r\n                            }\r\n                            //errorMessage={isNaN(Form.price)? 'ENTER A VALID price ' : state.err}\r\n                            leftIcon={\r\n                                <Icon\r\n                            name='tags'size={24}\r\n                            color='black'/>\r\n                            }\r\n                            onChangeText={\r\n                                e => getText(\"price\", e)\r\n                            }/>\r\n                            <Input placeholder=\"quantity\" \r\n                            errorStyle={\r\n                                {color: 'red'}\r\n                            }\r\n                            //errorMessage={isNaN(Form.quantity)? 'ENTER A VALID quantity' : state.err}\r\n                            leftIcon={\r\n                                <Icon\r\n                            name='line-chart'size={24}\r\n                            color='black'/>\r\n                            }\r\n                            onChangeText={\r\n                                e => getText(\"quantity\", e)\r\n                            }/>\r\n                    </View>\r\n                \r\n                    <View>\r\n                        <DropDownPicker items={\r\n                                [\r\n                                    {\r\n                                        label: 'New',\r\n                                        value: 'New',\r\n                                        icon: () => <Icon name=\"star\"\r\n                                            size={18}\r\n                                            color=\"#900\"/>,\r\n                                        hidden: true\r\n                                    }, {\r\n                                        label: 'Used-New',\r\n                                        value: 'Used-New',\r\n                                        icon: () => <Icon name=\"star-half-o\"\r\n                                            size={18}\r\n                                            color=\"#900\"/>\r\n                                    }, {\r\n                                        label: 'Used-Fair',\r\n                                        value: 'Used-Fair',\r\n                                        icon: () => <Icon name=\"recycle\"\r\n                                            size={18}\r\n                                            color=\"#900\"/>\r\n                                    },\r\n                                ]\r\n                            }\r\n                            defaultValue={\r\n                                Form.condition\r\n                            }\r\n                            placeholder=\"Condition\"\r\n                            containerStyle={\r\n                                {height: 40}\r\n                            }\r\n                            style={\r\n                                {backgroundColor: '#fafafa'}\r\n                            }\r\n                            itemStyle={\r\n                                {justifyContent: 'flex-start'}\r\n                            }\r\n                            dropDownStyle={\r\n                                {backgroundColor: '#fafafa'}\r\n                            }\r\n                            onChangeItem={\r\n                                e => getText(\"condition\", e.value)\r\n                            }\r\n                            onPress={\r\n                                e => Alert(\"condition\", e.value)\r\n                            }/>\r\n                    </View>\r\n                    <View style={styles.moveMe}>\r\n                    <View> \r\n                            <DropDownPicker items={\r\n                                [\r\n                                    {\r\n                                        label: 'New',\r\n                                        value: 'New',\r\n                                        icon: () => <Icon name=\"star\"\r\n                                            size={18}\r\n                                            color=\"#900\"/>,\r\n                                        hidden: true\r\n                                    }, {\r\n                                        label: 'Used-New',\r\n                                        value: 'Used-New',\r\n                                        icon: () => <Icon name=\"star-half-o\"\r\n                                            size={18}\r\n                                            color=\"#900\"/>\r\n                                    }, {\r\n                                        label: 'Used-Fair',\r\n                                        value: 'Used-Fair',\r\n                                        icon: () => <Icon name=\"recycle\"\r\n                                            size={18}\r\n                                            color=\"#900\"/>\r\n                                    },\r\n                                ]\r\n                            }\r\n                            defaultValue={\r\n                                Form.category\r\n                            }\r\n                            placeholder=\"Category\"\r\n                            containerStyle={\r\n                                {height: 40}\r\n                            }\r\n                            style={\r\n                                {backgroundColor: '#fafafa'}\r\n                            }\r\n                            itemStyle={\r\n                                {justifyContent: 'flex-start'}\r\n                            }\r\n                            dropDownStyle={\r\n                                {backgroundColor: '#fafafa'}\r\n                            }\r\n                            onChangeItem={\r\n                                e => getText(\"category\", e.value)\r\n                            }/>\r\n                    </View>\r\n                    </View>\r\n                </View>\r\n                <View style={\r\n                    styles.takemedown\r\n                }>\r\n                    <TouchableOpacity onPress={\r\n                        // () => setState({\r\n                        //     ...state,\r\n                        //     page: 4\r\n                        // })\r\n                        pushToDB,\r\n                        setState({...state,page:4})\r\n\r\n                    }>\r\n                        <Text style={\r\n                            styles.infosell\r\n                        }>Create New Post</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    takemedown: {\r\n        marginTop: 115\r\n    },\r\n    infosell: {\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        marginHorizontal: 10,\r\n        marginVertical: 10,\r\n        padding: 50,\r\n        backgroundColor: '#116263',\r\n        borderWidth: 1,\r\n        borderColor: '#DDD',\r\n        borderRadius: 10\r\n    },\r\n    moveMe:{\r\n        marginTop:100,\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}